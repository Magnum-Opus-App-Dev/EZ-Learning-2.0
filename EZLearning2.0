from tkinter import *
from PIL import ImageTk, Image
import customtkinter, sqlite3
import random

from pygame import FULLSCREEN

customtkinter.set_appearance_mode("Dark")
customtkinter.set_default_color_theme("green")

class login(customtkinter.CTk):
    def __init__(self, master):
        self.master = master
        self.master.geometry('900x500')
        self.master.title('EZ-Learning 2.0')
        self.master.iconbitmap("Logo.ico")
        self.master.config(bg="#121212")

        self._Username = StringVar()
        self._Password = StringVar()

        self.logo = (Image.open("logo_darkmode.png"))
        self.resize_logo = self.logo.resize((80, 80), Image.ANTIALIAS)
        self.photoimage = ImageTk.PhotoImage(self.resize_logo)
        self.canvas = Label(self.master, image=self.photoimage, bd=0)
        self.canvas.place(x=410, y=15)

        self.sub = Label(self.master, text = 'IT 105 - Application Development and Emerging Technologies', justify=LEFT, font = ('Arial',7,'bold'), bg = '#121212', fg="#bbbbbb")
        self.sub.place(x=10, y=474)
        self.dev_names = Label(self.master, text = 'Dar, John Homer Sayno\nDela Fuente, Ar-Jay\nEchano, Angelo Millares\nMalubay, Arriana Mae Vargas\nMortiga, Renze Meinard', justify=LEFT, font = ('Roboto',7), bg = '#121212', fg="#bbbbbb")
        self.dev_names.place(x=10, y=418)

        self.template = customtkinter.CTkFrame(self.master,
            width=500,
            height=310,)
        self.template.place(x=200, y=100)

        self.create_acc = customtkinter.CTkLabel(self.template,
            text="Login Account:",
            text_font=("Roboto Medium", -16))
        self.create_acc.place(x=180, y=25)

        self.acc_name = customtkinter.CTkLabel(self.template,
            text="Username/Email:")
        self.acc_name.place(x=145, y=65)

        self.name_entry = customtkinter.CTkEntry(self.template,
            width=180,
            fg_color=None,
            textvariable=self._Username)
        self.name_entry.place(x=162, y=95)

        self.acc_pass = customtkinter.CTkLabel(self.template,
            text="Password:")
        self.acc_pass.place(x=125, y=135)

        self.pass_entry = customtkinter.CTkEntry(self.template,
            width=180,
            fg_color=None,
            textvariable=self._Password,
            placeholder_text="1234")
        self.pass_entry.place(x=162, y=165)

        self.enter_btn = customtkinter.CTkButton(self.template,
            text="Login",
            border_width=2,
            fg_color=None,
            command=self.Login)
        self.enter_btn.place(x=270, y=230)

        self.signup_btn = customtkinter.CTkButton(self.template,
            text="Create New Account",
            border_width=2,
            fg_color=None,
            command=self.Signup)
        self.signup_btn.place(x=85, y=230)

        self.app_label = customtkinter.CTkLabel(self.master,
            text="Appearance Mode:",
            text_font=("Roboto Medium", 10))
        self.app_label.place(x=605, y=17)        

        self.appearance = customtkinter.CTkComboBox(self.master,
            values=["Dark", "Light"],
            command=self.change_appearance_mode)
        self.appearance.place(x=745, y=15)

    def change_appearance_mode(self, new_appearance_mode):
        customtkinter.set_appearance_mode(new_appearance_mode)
        if new_appearance_mode == "Dark":
            self.master.config(bg="#121212")
            self.logo = (Image.open("logo_darkmode.png"))
            self.resize_logo = self.logo.resize((80, 80), Image.ANTIALIAS)
            self.photoimage = ImageTk.PhotoImage(self.resize_logo)
            self.canvas = Label(self.master, image=self.photoimage, bd=0)
            self.canvas.place(x=410, y=15)
            self.sub = Label(self.master, text = 'IT 105 - Application Development and Emerging Technologies', justify=LEFT, font = ('Arial',7,'bold'), bg = '#121212', fg="#bbbbbb")
            self.sub.place(x=10, y=474)
            self.dev_names = Label(self.master, text = 'Dar, John Homer Sayno\nDela Fuente, Ar-Jay\nEchano, Angelo Millares\nMalubay, Arriana Mae Vargas\nMortiga, Renze Meinard', justify=LEFT, font = ('Roboto',7), bg = '#121212', fg="#bbbbbb")
            self.dev_names.place(x=10, y=418)
        elif new_appearance_mode == "Light":
            self.master.config(bg="#0d9187")
            self.logo = (Image.open("logo_lightmode.png"))
            self.resize_logo = self.logo.resize((80, 80), Image.ANTIALIAS)
            self.photoimage = ImageTk.PhotoImage(self.resize_logo)
            self.canvas = Label(self.master, image=self.photoimage, bd=0)
            self.canvas.place(x=410, y=15)
            self.sub = Label(self.master, text = 'IT 105 - Application Development and Emerging Technologies', justify=LEFT, font = ('Arial',7,'bold'), bg = '#0d9187', fg="#2e2e2e")
            self.sub.place(x=10, y=474)
            self.dev_names = Label(self.master, text = 'Dar, John Homer Sayno\nDela Fuente, Ar-Jay\nEchano, Angelo Millares\nMalubay, Arriana Mae Vargas\nMortiga, Renze Meinard', justify=LEFT, font = ('Roboto',7), bg = '#0d9187', fg="#2e2e2e")
            self.dev_names.place(x=10, y=418)
    
    def Login(self):
        import tkinter.messagebox
        if self._Username.get() == '' or self._Password.get() == '': tkinter.messagebox.showinfo('Try Again', 'Please input data')
        elif self._Username.get() != 'admin' or self._Password.get() != 'admin': tkinter.messagebox.showinfo('Sorry', 'Wrong Usename/Password')
        elif self._Username.get() == 'admin' and self._Password.get() == 'admin': home(self.master)
    
    def Signup(self):
        signup(self.master)
    
class signup(customtkinter.CTk):
    def __init__(self, master):
        self.master = master
        self.master.geometry('900x500')
        self.master.title('EZ-Learning 2.0')
        self.master.iconbitmap("Logo.ico")
        self.master.config(bg="#121212")

        self._Username = StringVar()
        self._Email = StringVar()
        self._Password = StringVar()
        self._Confirm_Password = StringVar()

        self.logo = (Image.open("logo_darkmode.png"))
        self.resize_logo = self.logo.resize((80, 80), Image.ANTIALIAS)
        self.photoimage = ImageTk.PhotoImage(self.resize_logo)
        self.canvas = Label(self.master, image=self.photoimage, bd=0)
        self.canvas.place(x=410, y=15)

        self.sub = Label(self.master, text = 'IT 105 - Application Development and Emerging Technologies', justify=LEFT, font = ('Arial',7,'bold'), bg = '#121212', fg="#bbbbbb")
        self.sub.place(x=10, y=474)
        self.dev_names = Label(self.master, text = 'Dar, John Homer Sayno\nDela Fuente, Ar-Jay\nEchano, Angelo Millares\nMalubay, Arriana Mae Vargas\nMortiga, Renze Meinard', justify=LEFT, font = ('Roboto',7), bg = '#121212', fg="#bbbbbb")
        self.dev_names.place(x=10, y=418)

        self.template = customtkinter.CTkFrame(self.master,
            width=500,
            height=310)
        self.template.place(x=200, y=100)

        self.create_acc = customtkinter.CTkLabel(self.template,
            text="Create New Account:",
            text_font=("Roboto Medium", -16))
        self.create_acc.place(x=180, y=25)

        self.acc_name = customtkinter.CTkLabel(self.template,
            text="Username:")
        self.acc_name.place(x=12, y=65)

        self.name_entry = customtkinter.CTkEntry(self.template,
            width=180,
            fg_color=None,
            textvariable=self._Username)
        self.name_entry.place(x=50, y=95)

        self.acc_email = customtkinter.CTkLabel(self.template,
            text="Email:")
        self.acc_email.place(x=217, y=65)

        self.name_entry = customtkinter.CTkEntry(self.template,
            width=180,
            fg_color=None,
            textvariable=self._Email)
        self.name_entry.place(x=270, y=95)

        self.acc_name = customtkinter.CTkLabel(self.template,
            text="Password:")
        self.acc_name.place(x=12, y=135)

        self.name_entry = customtkinter.CTkEntry(self.template,
            width=180,
            fg_color=None,
            textvariable=self._Password)
        self.name_entry.place(x=50, y=165)

        self.acc_pass = customtkinter.CTkLabel(self.template,
            text="Confirm Password:")
        self.acc_pass.place(x=254, y=135)

        self.pass_entry = customtkinter.CTkEntry(self.template,
            width=180,
            fg_color=None,
            textvariable=self._Confirm_Password,
            placeholder_text="1234")
        self.pass_entry.place(x=270, y=165)

        self.enter_btn = customtkinter.CTkButton(self.template,
            text="Signup Account",
            border_width=2,
            fg_color=None,
            command=self.Signup)
        self.enter_btn.place(x=270, y=230)

        self.signup_btn = customtkinter.CTkButton(self.template,
            text="Use Existing Account",
            border_width=2,
            fg_color=None,
            command=self.Login)
        self.signup_btn.place(x=85, y=230)

        self.app_label = customtkinter.CTkLabel(self.master,
            text="Appearance Mode:",
            text_font=("Roboto Medium", 10))
        self.app_label.place(x=605, y=17)        

        self.appearance = customtkinter.CTkComboBox(self.master,
            values=["Dark", "Light"],
            command=self.change_appearance_mode)
        self.appearance.place(x=745, y=15)

    def change_appearance_mode(self, new_appearance_mode):
        customtkinter.set_appearance_mode(new_appearance_mode)
        if new_appearance_mode == "Dark":
            self.master.config(bg="#121212")
            self.logo = (Image.open("logo_darkmode.png"))
            self.resize_logo = self.logo.resize((80, 80), Image.ANTIALIAS)
            self.photoimage = ImageTk.PhotoImage(self.resize_logo)
            self.canvas = Label(self.master, image=self.photoimage, bd=0)
            self.canvas.place(x=410, y=15)
            self.sub = Label(self.master, text = 'IT 105 - Application Development and Emerging Technologies', justify=LEFT, font = ('Arial',7,'bold'), bg = '#121212', fg="#bbbbbb")
            self.sub.place(x=10, y=474)
            self.dev_names = Label(self.master, text = 'Dar, John Homer Sayno\nDela Fuente, Ar-Jay\nEchano, Angelo Millares\nMalubay, Arriana Mae Vargas\nMortiga, Renze Meinard', justify=LEFT, font = ('Roboto',7), bg = '#121212', fg="#bbbbbb")
            self.dev_names.place(x=10, y=418)
        elif new_appearance_mode == "Light":
            self.master.config(bg="#0d9187")
            self.logo = (Image.open("logo_lightmode.png"))
            self.resize_logo = self.logo.resize((80, 80), Image.ANTIALIAS)
            self.photoimage = ImageTk.PhotoImage(self.resize_logo)
            self.canvas = Label(self.master, image=self.photoimage, bd=0)
            self.canvas.place(x=410, y=15)
            self.sub = Label(self.master, text = 'IT 105 - Application Development and Emerging Technologies', justify=LEFT, font = ('Arial',7,'bold'), bg = '#0d9187', fg="#2e2e2e")
            self.sub.place(x=10, y=474)
            self.dev_names = Label(self.master, text = 'Dar, John Homer Sayno\nDela Fuente, Ar-Jay\nEchano, Angelo Millares\nMalubay, Arriana Mae Vargas\nMortiga, Renze Meinard', justify=LEFT, font = ('Roboto',7), bg = '#0d9187', fg="#2e2e2e")
            self.dev_names.place(x=10, y=418)
    
    def Signup(self):
        import tkinter.messagebox
        if self._Username.get() == '' or self._Password.get() == '': tkinter.messagebox.showinfo('Try Again', 'Please input data')
        elif self._Username.get() != 'admin' or self._Password.get() != 'admin': tkinter.messagebox.showinfo('Sorry', 'Wrong Usename/Password')
        elif self._Username.get() == 'admin' and self._Password.get() == 'admin': home(self.master)
    
    def Login(self):
        login(self.master)

class home(customtkinter.CTk):
    def __init__(self, master):
        self.master = master
        self.img1 = ImageTk.PhotoImage(Image.open("open.png"))
        self.img2 = ImageTk.PhotoImage(Image.open("add.png"))
        self.img3 = ImageTk.PhotoImage(Image.open("close.png"))
        self.img4 = ImageTk.PhotoImage(Image.open("content_frame.png"))
        self.img5 = ImageTk.PhotoImage(Image.open("note_frames.png"))
        self.img6 = ImageTk.PhotoImage(Image.open("back.png"))
        self.thing = 0

        self.conn = sqlite3.connect('Hundreds.db')
        self.cursor = self.conn.cursor()

        self.cursor.execute("CREATE TABLE IF NOT EXISTS notes (number TEXT)")

        def default_home():
            f2 = customtkinter.CTkFrame(self.master,
            width=900,
            height=455)
            f2.place(x=0, y=45)
            l1 = customtkinter.CTkLabel(f2,
            text="Home",
            text_font=("Comic Sans MS",90))
            l1.place(x=290, y=110)

            hiddentemplate = Frame(self.master,
            width=800,
            height=45,
            background=self.master.cget("bg")
            )
            hiddentemplate.place(x=100, y=0)

        def home():
            f1.destroy()
            f2 = customtkinter.CTkFrame(self.master,
            width=900,
            height=455)
            f2.place(x=0, y=45)
            l1 = customtkinter.CTkLabel(f2,
            text="Home",
            text_font=("Comic Sans MS",90))
            l1.place(x=290, y=110)
            toggle_win()
        
        def notes():
            f1.destroy()
            frame = customtkinter.CTkFrame(self.master,
                width=900,
                height=455)
            frame.place(x=0, y=45)

            if self.master.cget("bg") == "#121212":
                layer_colors = "#2e2e2e"
                font_colors = "white"
            elif self.master.cget("bg") == "#0d9187":
                layer_colors = "#dedede"
                font_colors = "black"

            Label(frame,
                image=self.img5,
                border=0,
                bg=layer_colors,).place(x=20, y=20)

            Title = Entry(frame,
                font=("Comic Sans MS", 15),
                width=66,
                bg=layer_colors,
                fg=font_colors,
                borderwidth=0)
            Title.place(x=50, y=38)
            random_titles= ["Title:",
                "My to do list...",
                "Note to self;",
                "Reminder!"]
            Title.insert(0, random.choice(random_titles))

            import tkinter as tk 
            Note = Text(frame,
                font=("Comic Sans MS", 11),
                width=88,
                height=15,
                bg=layer_colors,
                fg=font_colors,
                borderwidth=0)
            Note.place(x=50, y=110)
            Note.insert(tk.END, "Note goes here...")

            Button(frame,
                image=self.img6,
                border=0,
                command=buttons,
                bg=layer_colors,
                activebackground=layer_colors).place(x=825, y=380)

        def buttons():
            f1.destroy()
            inside_frame = Frame(self.master,
                width=900,
                height=455)
            inside_frame.place(x=0, y=45)

            frame = customtkinter.CTkFrame(inside_frame,
                width=900,
                height=0)
            frame.pack(fill=BOTH, expand=1)

            self.cursor.execute("SELECT * FROM notes")
            x = self.cursor.fetchall()

            if self.master.cget("bg") == "#121212":
                layer_colors = "#2e2e2e"
                font_colors = "white"
            elif self.master.cget("bg") == "#0d9187":
                layer_colors = "#dedede"
                font_colors = "black"

            my_canvas = Canvas(frame,
                width=879,
                height=450,
                background=layer_colors,)
            my_canvas.pack(side=LEFT, fill=BOTH, expand=1)

            # Add A Scrollbar To The Canvas
            from tkinter import ttk
            my_scrollbar = ttk.Scrollbar(frame,
                orient=VERTICAL,
                command=my_canvas.yview)
            my_scrollbar.pack(side=RIGHT, fill=Y)

            # Configure The Canvas
            my_canvas.configure(yscrollcommand=my_scrollbar.set)
            my_canvas.bind('<Configure>',
                lambda e: my_canvas.configure(scrollregion=my_canvas.bbox("all")))
            my_canvas.bind_all('<MouseWheel>', 
                lambda event: my_canvas.yview('scroll', int(-2*(event.delta/120)), 'units'))

            # Create ANOTHER Frame INSIDE the Canvas
            blank_frame = customtkinter.CTkFrame(my_canvas,
                background=layer_colors,
                width=900,
                height=500)
            blank_frame.place(x=0, y=0)
            second_frame = Canvas(my_canvas,
                background=layer_colors, 
                width=500,
                height=500,
                highlightthickness=0)

            # Add that New frame To a Window In The Canvas
            my_canvas.create_window((0,0),
                window=second_frame,
                anchor="nw")

            for i in x:
                line_frame = Canvas(second_frame, 
                    highlightthickness=0)
                line_frame.pack(pady=5, padx=11)
                Label(line_frame,
                    image=self.img4,
                    border=0,
                    bg=layer_colors,).pack()
                Button(line_frame,
                    text=f'Button {i} Yo!',
                    font=("Comic Sans MS", 11),
                    fg=font_colors,
                    borderwidth=0,
                    relief=FLAT,
                    width=90,
                    background=layer_colors,
                    activebackground=layer_colors,
                    command=notes,
                    height=5).place(x=30, y=15)

            def add_button():

                self.thing += 1
                self.cursor.execute("INSERT INTO notes VALUES (:number)", {'number': self.thing})
                self.conn.commit()
                
                notes()

            Button(my_canvas,
                image=self.img2,
                border=0,
                command=add_button,
                bg=layer_colors,
                activebackground=layer_colors).place(x=820, y=395)

        def toggle_win():
            global f1
            f1=Frame(self.master,width=300,height=500,bg='#0b6177')
            f1.place(x=0,y=0)


            #buttons
            def bttn(x,y,text,bcolor,fcolor,cmd):
            
                def on_entera(e):
                    myButton1['background'] = bcolor #ffcc66
                    myButton1['foreground']= '#262626'  #000d33

                def on_leavea(e):
                    myButton1['background'] = fcolor
                    myButton1['foreground']= '#262626'

                myButton1 = Button(f1,text=text,
                            width=42,
                            height=2,
                            fg='#262626',
                            border=0,
                            bg=fcolor,
                            activeforeground='#262626',
                            activebackground=bcolor,            
                            command=cmd)
                            
                myButton1.bind("<Enter>", on_entera)
                myButton1.bind("<Leave>", on_leavea)

                myButton1.place(x=x,y=y)

            bttn(0,80,'H O M E','#0f9d9a','#0b6177',home)
            bttn(0,117,'N O T E S','#0f9d9a','#0b6177',buttons)
            bttn(0,154,'A S U S','#0f9d9a','#0b6177',None)
            bttn(0,191,'A C E R','#0f9d9a','#0b6177',None)
            bttn(0,228,'A C E R','#0f9d9a','#0b6177',None)

            def dele():
                f1.destroy()
    
            Button(f1,
                image=self.img3,
                border=0,
                command=dele,
                bg='#0b6177',
                activebackground='#0b6177').place(x=5,y=10)
        
        Button(self.master,
            image= self.img1,
            command=toggle_win,
            border=0,
            bg=self.master.cget("bg"),
            activebackground=self.master.cget("bg")).place(x=5,y=8)
        
        
        default_home()

        
window = Tk()
window.resizable(False, False)
ws = window.winfo_screenwidth() # width of the screen
hs = window.winfo_screenheight() # height of the screen
w = 900 # width for the Tk root
h = 500 # height for the Tk root

# calculate x and y coordinates for the Tk root window
x = (ws/2) - (w/2)
y = (hs/2) - (h/1.7)

# set the dimensions of the screen 
# and where it is placed
window.geometry('%dx%d+%d+%d' % (w, h, x, y))
if __name__ == "__main__":
    the_hundreds = signup(window)
    window.mainloop()
